/**
 * 
 */
package qusystem;

import process.Dispatcher;

/**
 * @author biv.
 * Інтерфейс визначає технологію створення моделі.
 * Цей шаблон проектування передбачає, що існує об'єкт, 
 * який має працювати з моделлю, і у ньому визначений диспетчер,
 * під керівництвом якого має працювати модель.
 * Об'єкт  за допомогою фабрики, що реалізує цей інтерфейс,
 * методом createModel(Dispatcher),створює модель (або декілька моделей),
 * передаючи моделі посилання на диспетчера.
 * Створювана модель має реалізувати інтерфейс IModel, у якому
 * передбачено метод componentsToStartList(). Завдання цього методу - 
 * передати активі компоненти моделі до стартового списку диспетчера.
 * Створивши модель, об'єкт, що має працювати з моделлю,  
 * повинен викликати метод componentsToStartList() і після цього може
 * ініціювати процесс моделювання за допомогою метода диспетчера start(). 
 * Але за звичай, перед стартом диспетчера, ще потребно підготувати
 * компоненти моделі до роботи(ініціалізація). Робити це у методі
 * componentsToStartList() недоцільно, бо ініціалізація залежіть
 * від режиму роботи моделі і методів ініціалізації може бути декілька.
 * Можливо слід створити декілька підкласів моделі, де будуть реалізовані 
 * специфічні методи ініціалізації. 
 */
public interface IModelFactory {
	
	/**Метод має бути реалізований у фабриці моделей
	 * Його завдання - створити нову модель.
	 * Як параметри до методу передається диспетчер, 
	 * під чиїм керівництвом модель буде працювати 
	 * і якому мають бути передані усі актори моделі.
	 */
	public Object createModel(Dispatcher dispatcher);

}
