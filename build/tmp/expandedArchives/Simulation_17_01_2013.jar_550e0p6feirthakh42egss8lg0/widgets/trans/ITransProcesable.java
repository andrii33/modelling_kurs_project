package widgets.trans;


/**
 * Інтерфейс визначає вимоги до моделей, що будуть працюватии паралельно під
 * орудою монітору transProcess.TransMonitorView. 
 * Призначення таких моделей: накопичення інформації для
 * визначення переходного процесу для деякого параметру моделі.
 * 
 */
	public interface ITransProcesable {

 /** Метод використовується монітором для ініціалізації моделі перед стартом.
 *  Як параметр до методу передається: тривалість моделювання finishTime, яка
 * підраховується монітором як добуток від довжини інтервалу накопичення даних
 * на кількість цих інтервалів. 
 */

	public void initForTrans(double finishTime);
	/**
	 * Метода resetAccum()вызывается в начале каждого интервала накопления
	 * информации для инициализации накопителей информации о переходном процессе
	 * в модели
	 */
	public void resetTransAccum();

	/**
	 * В конце каждого интервала накопления информации, monitor, с помощью
	 * метода getTransResult(), опрашивает все параллельно работающие модели.
	 * Результаты опроса усредняются, передаются объекту painter для отрисовки и
	 * накапливаются в в массиве intervalAverageArray. 
	 * Метод должен вернуть усредненное на интервале накопления 
	 * значение исследуемого параметра
	 */
	public double getTransResult();

}
